<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>red-team on Sh0ckFR&#39;s Website | CyberPunk, Born in the binary world of the computer security</title>
    <link>https://sh0ckfr.github.io/tags/red-team/</link>
    <description>Recent content in red-team on Sh0ckFR&#39;s Website | CyberPunk, Born in the binary world of the computer security</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 21 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://sh0ckfr.github.io/tags/red-team/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Les différences entre Red Team et Pentest</title>
      <link>https://sh0ckfr.github.io/pages/les-differences-entre-red-team-et-pentest/</link>
      <pubDate>Fri, 21 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://sh0ckfr.github.io/pages/les-differences-entre-red-team-et-pentest/</guid>
      <description>Les différences entre Red Team et Pentest
Qui n&amp;rsquo;a jamais entendu autour de lui &amp;ldquo;Je fais du Red Team, du vrai Red Team !&amp;rdquo; ?
Cette phrase, je l&amp;rsquo;ai souvent entendu dans des conférences, des soirées infosec et j&amp;rsquo;en passe, là où il fallait placer Red Team dans une conversation, à coup sûr ça faisait mouche.
Mais qu&amp;rsquo;en est-il vraiment ? est-ce du pentest ? est-ce que le pentest peut être considéré comme Red Team ?</description>
    </item>
    
    <item>
      <title>Introduction à Syswhispers1 et Syswhispers2</title>
      <link>https://sh0ckfr.github.io/pages/introduction-syswhispers/</link>
      <pubDate>Sun, 02 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://sh0ckfr.github.io/pages/introduction-syswhispers/</guid>
      <description>Introduction à Syswhispers1 et Syswhispers2
Bon, commençons par le commencement, Syswhispers c&amp;rsquo;est quoi ?
Il s&amp;rsquo;agit en fait d&amp;rsquo;une méthode permettant d&amp;rsquo;effectuer des appels dits &amp;ldquo;direct system calls&amp;rdquo;.
L&amp;rsquo;instruction syscall est utilisée pour faire la transition entre le User-Mode (UM) et le Kernel-Mode (KM) en utilisant un identifiant 16-bits WORD depuis le registre EAX.
Cet identifiant étant un index dans la structure interne de la table System Service Descriptor Table (SSDT) dans la pile d&amp;rsquo;exécution du Kernel.</description>
    </item>
    
  </channel>
</rss>
